{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isABIArgumentOverflowError = exports.isABIArgumentTypeError = exports.isABIArgumentLengthError = void 0;\nfunction isABIArgumentLengthError(error) {\n  return error.code === \"INVALID_ARGUMENT\" && error.count !== undefined && typeof error.count.types === \"number\" && typeof error.count.values === \"number\" && error.value !== undefined && typeof error.value.types === \"object\" && typeof error.value.values === \"object\" && error instanceof Error;\n}\nexports.isABIArgumentLengthError = isABIArgumentLengthError;\nfunction isABIArgumentTypeError(error) {\n  return error.code === \"INVALID_ARGUMENT\" && typeof error.argument === \"string\" && \"value\" in error && error instanceof Error;\n}\nexports.isABIArgumentTypeError = isABIArgumentTypeError;\nfunction isABIArgumentOverflowError(error) {\n  return error.code === \"NUMERIC_FAULT\" && error.fault === \"overflow\" && typeof error.operation === \"string\" && \"value\" in error && error instanceof Error;\n}\nexports.isABIArgumentOverflowError = isABIArgumentOverflowError;","map":{"version":3,"names":["isABIArgumentLengthError","error","code","count","undefined","types","values","value","Error","exports","isABIArgumentTypeError","argument","isABIArgumentOverflowError","fault","operation"],"sources":["/workspace/quanion/node_modules/@nomiclabs/hardhat-etherscan/src/ABITypes.ts"],"sourcesContent":["export interface ABIArgumentLengthError extends Error {\n  code: \"INVALID_ARGUMENT\";\n  count: {\n    types: number;\n    values: number;\n  };\n  value: {\n    types: Array<{\n      name: string;\n      type: string;\n    }>;\n    values: any[];\n  };\n  reason: string;\n}\n\nexport function isABIArgumentLengthError(\n  error: any\n): error is ABIArgumentLengthError {\n  return (\n    error.code === \"INVALID_ARGUMENT\" &&\n    error.count !== undefined &&\n    typeof error.count.types === \"number\" &&\n    typeof error.count.values === \"number\" &&\n    error.value !== undefined &&\n    typeof error.value.types === \"object\" &&\n    typeof error.value.values === \"object\" &&\n    error instanceof Error\n  );\n}\n\nexport interface ABIArgumentTypeError extends Error {\n  code: \"INVALID_ARGUMENT\";\n  argument: string;\n  value: any;\n  reason: string;\n}\n\nexport function isABIArgumentTypeError(\n  error: any\n): error is ABIArgumentTypeError {\n  return (\n    error.code === \"INVALID_ARGUMENT\" &&\n    typeof error.argument === \"string\" &&\n    \"value\" in error &&\n    error instanceof Error\n  );\n}\n\nexport interface ABIArgumentOverflowError extends Error {\n  code: \"NUMERIC_FAULT\";\n  fault: \"overflow\";\n  value: any;\n  reason: string;\n  operation: string;\n}\n\nexport function isABIArgumentOverflowError(\n  error: any\n): error is ABIArgumentOverflowError {\n  return (\n    error.code === \"NUMERIC_FAULT\" &&\n    error.fault === \"overflow\" &&\n    typeof error.operation === \"string\" &&\n    \"value\" in error &&\n    error instanceof Error\n  );\n}\n"],"mappings":";;;;;;AAgBA,SAAgBA,wBAAwBA,CACtCC,KAAU;EAEV,OACEA,KAAK,CAACC,IAAI,KAAK,kBAAkB,IACjCD,KAAK,CAACE,KAAK,KAAKC,SAAS,IACzB,OAAOH,KAAK,CAACE,KAAK,CAACE,KAAK,KAAK,QAAQ,IACrC,OAAOJ,KAAK,CAACE,KAAK,CAACG,MAAM,KAAK,QAAQ,IACtCL,KAAK,CAACM,KAAK,KAAKH,SAAS,IACzB,OAAOH,KAAK,CAACM,KAAK,CAACF,KAAK,KAAK,QAAQ,IACrC,OAAOJ,KAAK,CAACM,KAAK,CAACD,MAAM,KAAK,QAAQ,IACtCL,KAAK,YAAYO,KAAK;AAE1B;AAbAC,OAAA,CAAAT,wBAAA,GAAAA,wBAAA;AAsBA,SAAgBU,sBAAsBA,CACpCT,KAAU;EAEV,OACEA,KAAK,CAACC,IAAI,KAAK,kBAAkB,IACjC,OAAOD,KAAK,CAACU,QAAQ,KAAK,QAAQ,IAClC,OAAO,IAAIV,KAAK,IAChBA,KAAK,YAAYO,KAAK;AAE1B;AATAC,OAAA,CAAAC,sBAAA,GAAAA,sBAAA;AAmBA,SAAgBE,0BAA0BA,CACxCX,KAAU;EAEV,OACEA,KAAK,CAACC,IAAI,KAAK,eAAe,IAC9BD,KAAK,CAACY,KAAK,KAAK,UAAU,IAC1B,OAAOZ,KAAK,CAACa,SAAS,KAAK,QAAQ,IACnC,OAAO,IAAIb,KAAK,IAChBA,KAAK,YAAYO,KAAK;AAE1B;AAVAC,OAAA,CAAAG,0BAAA,GAAAA,0BAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}