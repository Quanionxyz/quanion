{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSpanningCellManager = void 0;\nconst alignSpanningCell_1 = require(\"./alignSpanningCell\");\nconst calculateSpanningCellWidth_1 = require(\"./calculateSpanningCellWidth\");\nconst makeRangeConfig_1 = require(\"./makeRangeConfig\");\nconst utils_1 = require(\"./utils\");\nconst findRangeConfig = (cell, rangeConfigs) => {\n  return rangeConfigs.find(rangeCoordinate => {\n    return (0, utils_1.isCellInRange)(cell, rangeCoordinate);\n  });\n};\nconst getContainingRange = (rangeConfig, context) => {\n  const width = (0, calculateSpanningCellWidth_1.calculateSpanningCellWidth)(rangeConfig, context);\n  const wrappedContent = (0, alignSpanningCell_1.wrapRangeContent)(rangeConfig, width, context);\n  const alignedContent = (0, alignSpanningCell_1.alignVerticalRangeContent)(rangeConfig, wrappedContent, context);\n  const getCellContent = rowIndex => {\n    const {\n      topLeft\n    } = rangeConfig;\n    const {\n      drawHorizontalLine,\n      rowHeights\n    } = context;\n    const totalWithinHorizontalBorderHeight = rowIndex - topLeft.row;\n    const totalHiddenHorizontalBorderHeight = (0, utils_1.sequence)(topLeft.row + 1, rowIndex).filter(index => {\n      /* istanbul ignore next */\n      return !(drawHorizontalLine === null || drawHorizontalLine === void 0 ? void 0 : drawHorizontalLine(index, rowHeights.length));\n    }).length;\n    const offset = (0, utils_1.sumArray)(rowHeights.slice(topLeft.row, rowIndex)) + totalWithinHorizontalBorderHeight - totalHiddenHorizontalBorderHeight;\n    return alignedContent.slice(offset, offset + rowHeights[rowIndex]);\n  };\n  const getBorderContent = borderIndex => {\n    const {\n      topLeft\n    } = rangeConfig;\n    const offset = (0, utils_1.sumArray)(context.rowHeights.slice(topLeft.row, borderIndex)) + (borderIndex - topLeft.row - 1);\n    return alignedContent[offset];\n  };\n  return {\n    ...rangeConfig,\n    extractBorderContent: getBorderContent,\n    extractCellContent: getCellContent,\n    height: wrappedContent.length,\n    width\n  };\n};\nconst inSameRange = (cell1, cell2, ranges) => {\n  const range1 = findRangeConfig(cell1, ranges);\n  const range2 = findRangeConfig(cell2, ranges);\n  if (range1 && range2) {\n    return (0, utils_1.areCellEqual)(range1.topLeft, range2.topLeft);\n  }\n  return false;\n};\nconst hashRange = range => {\n  const {\n    row,\n    col\n  } = range.topLeft;\n  return `${row}/${col}`;\n};\nconst createSpanningCellManager = parameters => {\n  const {\n    spanningCellConfigs,\n    columnsConfig\n  } = parameters;\n  const ranges = spanningCellConfigs.map(config => {\n    return (0, makeRangeConfig_1.makeRangeConfig)(config, columnsConfig);\n  });\n  const rangeCache = {};\n  let rowHeights = [];\n  let rowIndexMapping = [];\n  return {\n    getContainingRange: (cell, options) => {\n      var _a;\n      const originalRow = (options === null || options === void 0 ? void 0 : options.mapped) ? rowIndexMapping[cell.row] : cell.row;\n      const range = findRangeConfig({\n        ...cell,\n        row: originalRow\n      }, ranges);\n      if (!range) {\n        return undefined;\n      }\n      if (rowHeights.length === 0) {\n        return getContainingRange(range, {\n          ...parameters,\n          rowHeights\n        });\n      }\n      const hash = hashRange(range);\n      (_a = rangeCache[hash]) !== null && _a !== void 0 ? _a : rangeCache[hash] = getContainingRange(range, {\n        ...parameters,\n        rowHeights\n      });\n      return rangeCache[hash];\n    },\n    inSameRange: (cell1, cell2) => {\n      return inSameRange(cell1, cell2, ranges);\n    },\n    rowHeights,\n    rowIndexMapping,\n    setRowHeights: _rowHeights => {\n      rowHeights = _rowHeights;\n    },\n    setRowIndexMapping: mappedRowHeights => {\n      rowIndexMapping = (0, utils_1.flatten)(mappedRowHeights.map((height, index) => {\n        return Array.from({\n          length: height\n        }, () => {\n          return index;\n        });\n      }));\n    }\n  };\n};\nexports.createSpanningCellManager = createSpanningCellManager;","map":{"version":3,"names":["alignSpanningCell_1","require","calculateSpanningCellWidth_1","makeRangeConfig_1","utils_1","findRangeConfig","cell","rangeConfigs","find","rangeCoordinate","isCellInRange","getContainingRange","rangeConfig","context","width","calculateSpanningCellWidth","wrappedContent","wrapRangeContent","alignedContent","alignVerticalRangeContent","getCellContent","rowIndex","topLeft","drawHorizontalLine","rowHeights","totalWithinHorizontalBorderHeight","row","totalHiddenHorizontalBorderHeight","sequence","filter","index","length","offset","sumArray","slice","getBorderContent","borderIndex","extractBorderContent","extractCellContent","height","inSameRange","cell1","cell2","ranges","range1","range2","areCellEqual","hashRange","range","col","createSpanningCellManager","parameters","spanningCellConfigs","columnsConfig","map","config","makeRangeConfig","rangeCache","rowIndexMapping","options","originalRow","mapped","undefined","hash","_a","setRowHeights","_rowHeights","setRowIndexMapping","mappedRowHeights","flatten","Array","from","exports"],"sources":["../../src/spanningCellManager.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}