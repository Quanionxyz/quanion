{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.wrapWord = void 0;\nconst slice_ansi_1 = __importDefault(require(\"slice-ansi\"));\nconst strip_ansi_1 = __importDefault(require(\"strip-ansi\"));\nconst calculateStringLengths = (input, size) => {\n  let subject = (0, strip_ansi_1.default)(input);\n  const chunks = [];\n  // https://regex101.com/r/gY5kZ1/1\n  const re = new RegExp('(^.{1,' + String(Math.max(size, 1)) + '}(\\\\s+|$))|(^.{1,' + String(Math.max(size - 1, 1)) + '}(\\\\\\\\|/|_|\\\\.|,|;|-))');\n  do {\n    let chunk;\n    const match = re.exec(subject);\n    if (match) {\n      chunk = match[0];\n      subject = subject.slice(chunk.length);\n      const trimmedLength = chunk.trim().length;\n      const offset = chunk.length - trimmedLength;\n      chunks.push([trimmedLength, offset]);\n    } else {\n      chunk = subject.slice(0, size);\n      subject = subject.slice(size);\n      chunks.push([chunk.length, 0]);\n    }\n  } while (subject.length);\n  return chunks;\n};\nconst wrapWord = (input, size) => {\n  const result = [];\n  let startIndex = 0;\n  calculateStringLengths(input, size).forEach(([length, offset]) => {\n    result.push((0, slice_ansi_1.default)(input, startIndex, startIndex + length));\n    startIndex += length + offset;\n  });\n  return result;\n};\nexports.wrapWord = wrapWord;","map":{"version":3,"names":["slice_ansi_1","__importDefault","require","strip_ansi_1","calculateStringLengths","input","size","subject","default","chunks","re","RegExp","String","Math","max","chunk","match","exec","slice","length","trimmedLength","trim","offset","push","wrapWord","result","startIndex","forEach","exports"],"sources":["../../src/wrapWord.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;AAAA,MAAAA,YAAA,GAAAC,eAAA,CAAAC,OAAA;AACA,MAAAC,YAAA,GAAAF,eAAA,CAAAC,OAAA;AAEA,MAAME,sBAAsB,GAAGA,CAACC,KAAa,EAAEC,IAAY,KAA4C;EACrG,IAAIC,OAAO,GAAG,IAAAJ,YAAA,CAAAK,OAAS,EAACH,KAAK,CAAC;EAE9B,MAAMI,MAAM,GAA4B,EAAE;EAE1C;EACA,MAAMC,EAAE,GAAG,IAAIC,MAAM,CAAC,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACR,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,mBAAmB,GAAGM,MAAM,CAACC,IAAI,CAACC,GAAG,CAACR,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,wBAAwB,CAAC;EAE5I,GAAG;IACD,IAAIS,KAAa;IAEjB,MAAMC,KAAK,GAAGN,EAAE,CAACO,IAAI,CAACV,OAAO,CAAC;IAE9B,IAAIS,KAAK,EAAE;MACTD,KAAK,GAAGC,KAAK,CAAC,CAAC,CAAC;MAEhBT,OAAO,GAAGA,OAAO,CAACW,KAAK,CAACH,KAAK,CAACI,MAAM,CAAC;MAErC,MAAMC,aAAa,GAAGL,KAAK,CAACM,IAAI,EAAE,CAACF,MAAM;MACzC,MAAMG,MAAM,GAAGP,KAAK,CAACI,MAAM,GAAGC,aAAa;MAE3CX,MAAM,CAACc,IAAI,CAAC,CAACH,aAAa,EAAEE,MAAM,CAAC,CAAC;KACrC,MAAM;MACLP,KAAK,GAAGR,OAAO,CAACW,KAAK,CAAC,CAAC,EAAEZ,IAAI,CAAC;MAC9BC,OAAO,GAAGA,OAAO,CAACW,KAAK,CAACZ,IAAI,CAAC;MAE7BG,MAAM,CAACc,IAAI,CAAC,CAACR,KAAK,CAACI,MAAM,EAAE,CAAC,CAAC,CAAC;;GAEjC,QAAQZ,OAAO,CAACY,MAAM;EAEvB,OAAOV,MAAM;AACf,CAAC;AAEM,MAAMe,QAAQ,GAAGA,CAACnB,KAAa,EAAEC,IAAY,KAAc;EAChE,MAAMmB,MAAM,GAAa,EAAE;EAE3B,IAAIC,UAAU,GAAG,CAAC;EAClBtB,sBAAsB,CAACC,KAAK,EAAEC,IAAI,CAAC,CAACqB,OAAO,CAAC,CAAC,CAACR,MAAM,EAAEG,MAAM,CAAC,KAAI;IAC/DG,MAAM,CAACF,IAAI,CAAC,IAAAvB,YAAA,CAAAQ,OAAK,EAACH,KAAK,EAAEqB,UAAU,EAAEA,UAAU,GAAGP,MAAM,CAAC,CAAC;IAE1DO,UAAU,IAAIP,MAAM,GAAGG,MAAM;EAC/B,CAAC,CAAC;EAEF,OAAOG,MAAM;AACf,CAAC;AAXYG,OAAA,CAAAJ,QAAQ,GAAAA,QAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}