{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeTableConfig = void 0;\nconst calculateMaximumColumnWidths_1 = require(\"./calculateMaximumColumnWidths\");\nconst spanningCellManager_1 = require(\"./spanningCellManager\");\nconst utils_1 = require(\"./utils\");\nconst validateConfig_1 = require(\"./validateConfig\");\nconst validateSpanningCellConfig_1 = require(\"./validateSpanningCellConfig\");\n/**\n * Creates a configuration for every column using default\n * values for the missing configuration properties.\n */\nconst makeColumnsConfig = (rows, columns, columnDefault, spanningCellConfigs) => {\n  const columnWidths = (0, calculateMaximumColumnWidths_1.calculateMaximumColumnWidths)(rows, spanningCellConfigs);\n  return rows[0].map((_, columnIndex) => {\n    return {\n      alignment: 'left',\n      paddingLeft: 1,\n      paddingRight: 1,\n      truncate: Number.POSITIVE_INFINITY,\n      verticalAlignment: 'top',\n      width: columnWidths[columnIndex],\n      wrapWord: false,\n      ...columnDefault,\n      ...(columns === null || columns === void 0 ? void 0 : columns[columnIndex])\n    };\n  });\n};\n/**\n * Makes a new configuration object out of the userConfig object\n * using default values for the missing configuration properties.\n */\nconst makeTableConfig = (rows, config = {}, injectedSpanningCellConfig) => {\n  var _a, _b, _c, _d, _e;\n  (0, validateConfig_1.validateConfig)('config.json', config);\n  (0, validateSpanningCellConfig_1.validateSpanningCellConfig)(rows, (_a = config.spanningCells) !== null && _a !== void 0 ? _a : []);\n  const spanningCellConfigs = (_b = injectedSpanningCellConfig !== null && injectedSpanningCellConfig !== void 0 ? injectedSpanningCellConfig : config.spanningCells) !== null && _b !== void 0 ? _b : [];\n  const columnsConfig = makeColumnsConfig(rows, config.columns, config.columnDefault, spanningCellConfigs);\n  const drawVerticalLine = (_c = config.drawVerticalLine) !== null && _c !== void 0 ? _c : () => {\n    return true;\n  };\n  const drawHorizontalLine = (_d = config.drawHorizontalLine) !== null && _d !== void 0 ? _d : () => {\n    return true;\n  };\n  return {\n    ...config,\n    border: (0, utils_1.makeBorderConfig)(config.border),\n    columns: columnsConfig,\n    drawHorizontalLine,\n    drawVerticalLine,\n    singleLine: (_e = config.singleLine) !== null && _e !== void 0 ? _e : false,\n    spanningCellManager: (0, spanningCellManager_1.createSpanningCellManager)({\n      columnsConfig,\n      drawHorizontalLine,\n      drawVerticalLine,\n      rows,\n      spanningCellConfigs\n    })\n  };\n};\nexports.makeTableConfig = makeTableConfig;","map":{"version":3,"names":["calculateMaximumColumnWidths_1","require","spanningCellManager_1","utils_1","validateConfig_1","validateSpanningCellConfig_1","makeColumnsConfig","rows","columns","columnDefault","spanningCellConfigs","columnWidths","calculateMaximumColumnWidths","map","_","columnIndex","alignment","paddingLeft","paddingRight","truncate","Number","POSITIVE_INFINITY","verticalAlignment","width","wrapWord","makeTableConfig","config","injectedSpanningCellConfig","validateConfig","validateSpanningCellConfig","_a","spanningCells","_b","columnsConfig","drawVerticalLine","_c","drawHorizontalLine","_d","border","makeBorderConfig","singleLine","_e","spanningCellManager","createSpanningCellManager","exports"],"sources":["../../src/makeTableConfig.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,MAAAA,8BAAA,GAAAC,OAAA;AAGA,MAAAC,qBAAA,GAAAD,OAAA;AAWA,MAAAE,OAAA,GAAAF,OAAA;AAGA,MAAAG,gBAAA,GAAAH,OAAA;AAGA,MAAAI,4BAAA,GAAAJ,OAAA;AAIA;;;;AAIA,MAAMK,iBAAiB,GAAGA,CAACC,IAAW,EACpCC,OAAqC,EACrCC,aAAgC,EAChCC,mBAA0C,KAAoB;EAC9D,MAAMC,YAAY,GAAG,IAAAX,8BAAA,CAAAY,4BAA4B,EAACL,IAAI,EAAEG,mBAAmB,CAAC;EAE5E,OAAOH,IAAI,CAAC,CAAC,CAAC,CAACM,GAAG,CAAC,CAACC,CAAC,EAAEC,WAAW,KAAI;IACpC,OAAO;MACLC,SAAS,EAAE,MAAM;MACjBC,WAAW,EAAE,CAAC;MACdC,YAAY,EAAE,CAAC;MACfC,QAAQ,EAAEC,MAAM,CAACC,iBAAiB;MAClCC,iBAAiB,EAAE,KAAK;MACxBC,KAAK,EAAEZ,YAAY,CAACI,WAAW,CAAC;MAChCS,QAAQ,EAAE,KAAK;MACf,GAAGf,aAAa;MAChB,IAAGD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAGO,WAAW,CAAC;KAC1B;EACH,CAAC,CAAC;AACJ,CAAC;AAED;;;;AAKO,MAAMU,eAAe,GAAGA,CAAClB,IAAW,EAAEmB,MAAA,GAA0B,EAAE,EAAEC,0BAAiD,KAAiB;;EAC3I,IAAAvB,gBAAA,CAAAwB,cAAc,EAAC,aAAa,EAAEF,MAAM,CAAC;EACrC,IAAArB,4BAAA,CAAAwB,0BAA0B,EAACtB,IAAI,EAAE,CAAAuB,EAAA,GAAAJ,MAAM,CAACK,aAAa,cAAAD,EAAA,cAAAA,EAAA,GAAI,EAAE,CAAC;EAE5D,MAAMpB,mBAAmB,GAAG,CAAAsB,EAAA,GAAAL,0BAA0B,aAA1BA,0BAA0B,cAA1BA,0BAA0B,GAAID,MAAM,CAACK,aAAa,cAAAC,EAAA,cAAAA,EAAA,GAAI,EAAE;EAEpF,MAAMC,aAAa,GAAG3B,iBAAiB,CAACC,IAAI,EAAEmB,MAAM,CAAClB,OAAO,EAAEkB,MAAM,CAACjB,aAAa,EAAEC,mBAAmB,CAAC;EAExG,MAAMwB,gBAAgB,GAAG,CAAAC,EAAA,GAAAT,MAAM,CAACQ,gBAAgB,cAAAC,EAAA,cAAAA,EAAA,GAAK,MAAK;IACxD,OAAO,IAAI;EACb,CAAE;EACF,MAAMC,kBAAkB,GAAG,CAAAC,EAAA,GAAAX,MAAM,CAACU,kBAAkB,cAAAC,EAAA,cAAAA,EAAA,GAAK,MAAK;IAC5D,OAAO,IAAI;EACb,CAAE;EAEF,OAAO;IACL,GAAGX,MAAM;IACTY,MAAM,EAAE,IAAAnC,OAAA,CAAAoC,gBAAgB,EAACb,MAAM,CAACY,MAAM,CAAC;IACvC9B,OAAO,EAAEyB,aAAa;IACtBG,kBAAkB;IAClBF,gBAAgB;IAChBM,UAAU,EAAE,CAAAC,EAAA,GAAAf,MAAM,CAACc,UAAU,cAAAC,EAAA,cAAAA,EAAA,GAAI,KAAK;IACtCC,mBAAmB,EAAE,IAAAxC,qBAAA,CAAAyC,yBAAyB,EAAC;MAC7CV,aAAa;MACbG,kBAAkB;MAClBF,gBAAgB;MAChB3B,IAAI;MACJG;KACD;GACF;AACH,CAAC;AA9BYkC,OAAA,CAAAnB,eAAe,GAAAA,eAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}