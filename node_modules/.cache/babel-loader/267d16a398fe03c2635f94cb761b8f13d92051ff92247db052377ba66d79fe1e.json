{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeArguments = void 0;\nconst ABITypes_1 = require(\"./ABITypes\");\nconst constants_1 = require(\"./constants\");\nconst errors_1 = require(\"./errors\");\nasync function encodeArguments(abi, sourceName, contractName, constructorArguments) {\n  const {\n    Interface\n  } = await Promise.resolve().then(() => __importStar(require(\"@ethersproject/abi\")));\n  const contractInterface = new Interface(abi);\n  let deployArgumentsEncoded;\n  try {\n    deployArgumentsEncoded = contractInterface.encodeDeploy(constructorArguments).replace(\"0x\", \"\");\n  } catch (error) {\n    if ((0, ABITypes_1.isABIArgumentLengthError)(error)) {\n      // TODO: add a list of types and constructor arguments to the error message?\n      const message = `The constructor for ${sourceName}:${contractName} has ${error.count.types} parameters\nbut ${error.count.values} arguments were provided instead.`;\n      throw new errors_1.HardhatEtherscanPluginError(constants_1.pluginName, message, error);\n    }\n    if ((0, ABITypes_1.isABIArgumentTypeError)(error)) {\n      const message = `Value ${error.value} cannot be encoded for the parameter ${error.argument}.\nEncoder error reason: ${error.reason}`;\n      throw new errors_1.HardhatEtherscanPluginError(constants_1.pluginName, message, error);\n    }\n    if ((0, ABITypes_1.isABIArgumentOverflowError)(error)) {\n      const message = `Value ${error.value} is not a safe integer and cannot be encoded.\nUse a string instead of a plain number.\nEncoder error reason: ${error.fault} fault in ${error.operation}`;\n      throw new errors_1.HardhatEtherscanPluginError(constants_1.pluginName, message, error);\n    }\n    // Should be unreachable.\n    throw error;\n  }\n  return deployArgumentsEncoded;\n}\nexports.encodeArguments = encodeArguments;","map":{"version":3,"names":["ABITypes_1","require","constants_1","errors_1","encodeArguments","abi","sourceName","contractName","constructorArguments","Interface","Promise","resolve","then","__importStar","contractInterface","deployArgumentsEncoded","encodeDeploy","replace","error","isABIArgumentLengthError","message","count","types","values","HardhatEtherscanPluginError","pluginName","isABIArgumentTypeError","value","argument","reason","isABIArgumentOverflowError","fault","operation","exports"],"sources":["/workspace/quanion/node_modules/@nomiclabs/hardhat-etherscan/src/ABIEncoder.ts"],"sourcesContent":["import {\n  isABIArgumentLengthError,\n  isABIArgumentOverflowError,\n  isABIArgumentTypeError,\n} from \"./ABITypes\";\nimport { pluginName } from \"./constants\";\nimport { HardhatEtherscanPluginError } from \"./errors\";\n\nexport async function encodeArguments(\n  abi: any,\n  sourceName: string,\n  contractName: string,\n  constructorArguments: any[]\n) {\n  const { Interface } = await import(\"@ethersproject/abi\");\n\n  const contractInterface = new Interface(abi);\n  let deployArgumentsEncoded;\n  try {\n    deployArgumentsEncoded = contractInterface\n      .encodeDeploy(constructorArguments)\n      .replace(\"0x\", \"\");\n  } catch (error) {\n    if (isABIArgumentLengthError(error)) {\n      // TODO: add a list of types and constructor arguments to the error message?\n      const message = `The constructor for ${sourceName}:${contractName} has ${error.count.types} parameters\nbut ${error.count.values} arguments were provided instead.`;\n      throw new HardhatEtherscanPluginError(pluginName, message, error);\n    }\n    if (isABIArgumentTypeError(error)) {\n      const message = `Value ${error.value} cannot be encoded for the parameter ${error.argument}.\nEncoder error reason: ${error.reason}`;\n      throw new HardhatEtherscanPluginError(pluginName, message, error);\n    }\n    if (isABIArgumentOverflowError(error)) {\n      const message = `Value ${error.value} is not a safe integer and cannot be encoded.\nUse a string instead of a plain number.\nEncoder error reason: ${error.fault} fault in ${error.operation}`;\n      throw new HardhatEtherscanPluginError(pluginName, message, error);\n    }\n    // Should be unreachable.\n    throw error;\n  }\n\n  return deployArgumentsEncoded;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAAA,UAAA,GAAAC,OAAA;AAKA,MAAAC,WAAA,GAAAD,OAAA;AACA,MAAAE,QAAA,GAAAF,OAAA;AAEO,eAAeG,eAAeA,CACnCC,GAAQ,EACRC,UAAkB,EAClBC,YAAoB,EACpBC,oBAA2B;EAE3B,MAAM;IAAEC;EAAS,CAAE,GAAG,MAAAC,OAAA,CAAAC,OAAA,GAAAC,IAAA,OAAAC,YAAA,CAAAZ,OAAA,CAAa,oBAAoB,GAAC;EAExD,MAAMa,iBAAiB,GAAG,IAAIL,SAAS,CAACJ,GAAG,CAAC;EAC5C,IAAIU,sBAAsB;EAC1B,IAAI;IACFA,sBAAsB,GAAGD,iBAAiB,CACvCE,YAAY,CAACR,oBAAoB,CAAC,CAClCS,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;GACrB,CAAC,OAAOC,KAAK,EAAE;IACd,IAAI,IAAAlB,UAAA,CAAAmB,wBAAwB,EAACD,KAAK,CAAC,EAAE;MACnC;MACA,MAAME,OAAO,GAAG,uBAAuBd,UAAU,IAAIC,YAAY,QAAQW,KAAK,CAACG,KAAK,CAACC,KAAK;MAC1FJ,KAAK,CAACG,KAAK,CAACE,MAAM,mCAAmC;MACrD,MAAM,IAAIpB,QAAA,CAAAqB,2BAA2B,CAACtB,WAAA,CAAAuB,UAAU,EAAEL,OAAO,EAAEF,KAAK,CAAC;;IAEnE,IAAI,IAAAlB,UAAA,CAAA0B,sBAAsB,EAACR,KAAK,CAAC,EAAE;MACjC,MAAME,OAAO,GAAG,SAASF,KAAK,CAACS,KAAK,wCAAwCT,KAAK,CAACU,QAAQ;wBACxEV,KAAK,CAACW,MAAM,EAAE;MAChC,MAAM,IAAI1B,QAAA,CAAAqB,2BAA2B,CAACtB,WAAA,CAAAuB,UAAU,EAAEL,OAAO,EAAEF,KAAK,CAAC;;IAEnE,IAAI,IAAAlB,UAAA,CAAA8B,0BAA0B,EAACZ,KAAK,CAAC,EAAE;MACrC,MAAME,OAAO,GAAG,SAASF,KAAK,CAACS,KAAK;;wBAElBT,KAAK,CAACa,KAAK,aAAab,KAAK,CAACc,SAAS,EAAE;MAC3D,MAAM,IAAI7B,QAAA,CAAAqB,2BAA2B,CAACtB,WAAA,CAAAuB,UAAU,EAAEL,OAAO,EAAEF,KAAK,CAAC;;IAEnE;IACA,MAAMA,KAAK;;EAGb,OAAOH,sBAAsB;AAC/B;AArCAkB,OAAA,CAAA7B,eAAA,GAAAA,eAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}