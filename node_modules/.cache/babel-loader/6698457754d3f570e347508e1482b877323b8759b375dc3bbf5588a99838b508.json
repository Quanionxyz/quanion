{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSpanningCellWidth = void 0;\nconst utils_1 = require(\"./utils\");\nconst calculateSpanningCellWidth = (rangeConfig, dependencies) => {\n  const {\n    columnsConfig,\n    drawVerticalLine\n  } = dependencies;\n  const {\n    topLeft,\n    bottomRight\n  } = rangeConfig;\n  const totalWidth = (0, utils_1.sumArray)(columnsConfig.slice(topLeft.col, bottomRight.col + 1).map(({\n    width\n  }) => {\n    return width;\n  }));\n  const totalPadding = topLeft.col === bottomRight.col ? columnsConfig[topLeft.col].paddingRight + columnsConfig[bottomRight.col].paddingLeft : (0, utils_1.sumArray)(columnsConfig.slice(topLeft.col, bottomRight.col + 1).map(({\n    paddingLeft,\n    paddingRight\n  }) => {\n    return paddingLeft + paddingRight;\n  }));\n  const totalBorderWidths = bottomRight.col - topLeft.col;\n  const totalHiddenVerticalBorders = (0, utils_1.sequence)(topLeft.col + 1, bottomRight.col).filter(verticalBorderIndex => {\n    return !drawVerticalLine(verticalBorderIndex, columnsConfig.length);\n  }).length;\n  return totalWidth + totalPadding + totalBorderWidths - totalHiddenVerticalBorders;\n};\nexports.calculateSpanningCellWidth = calculateSpanningCellWidth;","map":{"version":3,"names":["utils_1","require","calculateSpanningCellWidth","rangeConfig","dependencies","columnsConfig","drawVerticalLine","topLeft","bottomRight","totalWidth","sumArray","slice","col","map","width","totalPadding","paddingRight","paddingLeft","totalBorderWidths","totalHiddenVerticalBorders","sequence","filter","verticalBorderIndex","length","exports"],"sources":["../../src/calculateSpanningCellWidth.ts"],"sourcesContent":[null],"mappings":";;;;;;AAMA,MAAAA,OAAA,GAAAC,OAAA;AAIO,MAAMC,0BAA0B,GAAGA,CAACC,WAAwB,EAAEC,YAAoC,KAAY;EACnH,MAAM;IAACC,aAAa;IAAEC;EAAgB,CAAC,GAAGF,YAAY;EACtD,MAAM;IAACG,OAAO;IAAEC;EAAW,CAAC,GAAGL,WAAW;EAE1C,MAAMM,UAAU,GAAG,IAAAT,OAAA,CAAAU,QAAQ,EACzBL,aAAa,CAACM,KAAK,CAACJ,OAAO,CAACK,GAAG,EAAEJ,WAAW,CAACI,GAAG,GAAG,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC;IAACC;EAAK,CAAC,KAAI;IACpE,OAAOA,KAAK;EACd,CAAC,CAAC,CACH;EAED,MAAMC,YAAY,GAChBR,OAAO,CAACK,GAAG,KAAKJ,WAAW,CAACI,GAAG,GAC7BP,aAAa,CAACE,OAAO,CAACK,GAAG,CAAC,CAACI,YAAY,GACvCX,aAAa,CAACG,WAAW,CAACI,GAAG,CAAC,CAACK,WAAW,GAC1C,IAAAjB,OAAA,CAAAU,QAAQ,EACNL,aAAa,CACVM,KAAK,CAACJ,OAAO,CAACK,GAAG,EAAEJ,WAAW,CAACI,GAAG,GAAG,CAAC,CAAC,CACvCC,GAAG,CAAC,CAAC;IAACI,WAAW;IAAED;EAAY,CAAC,KAAI;IACnC,OAAOC,WAAW,GAAGD,YAAY;EACnC,CAAC,CAAC,CACL;EACL,MAAME,iBAAiB,GAAGV,WAAW,CAACI,GAAG,GAAGL,OAAO,CAACK,GAAG;EAEvD,MAAMO,0BAA0B,GAAG,IAAAnB,OAAA,CAAAoB,QAAQ,EAACb,OAAO,CAACK,GAAG,GAAG,CAAC,EAAEJ,WAAW,CAACI,GAAG,CAAC,CAACS,MAAM,CAAEC,mBAAmB,IAAI;IAC3G,OAAO,CAAChB,gBAAgB,CAACgB,mBAAmB,EAAEjB,aAAa,CAACkB,MAAM,CAAC;EACrE,CAAC,CAAC,CAACA,MAAM;EAET,OAAOd,UAAU,GAAGM,YAAY,GAAGG,iBAAiB,GAAGC,0BAA0B;AACnF,CAAC;AA5BYK,OAAA,CAAAtB,0BAA0B,GAAAA,0BAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}