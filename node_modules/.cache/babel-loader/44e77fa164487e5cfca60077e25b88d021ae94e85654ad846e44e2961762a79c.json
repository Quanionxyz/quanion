{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateRowHeights = void 0;\nconst calculateCellHeight_1 = require(\"./calculateCellHeight\");\nconst utils_1 = require(\"./utils\");\n/**\n * Produces an array of values that describe the largest value length (height) in every row.\n */\nconst calculateRowHeights = (rows, config) => {\n  const rowHeights = [];\n  for (const [rowIndex, row] of rows.entries()) {\n    let rowHeight = 1;\n    row.forEach((cell, cellIndex) => {\n      var _a;\n      const containingRange = (_a = config.spanningCellManager) === null || _a === void 0 ? void 0 : _a.getContainingRange({\n        col: cellIndex,\n        row: rowIndex\n      });\n      if (!containingRange) {\n        const cellHeight = (0, calculateCellHeight_1.calculateCellHeight)(cell, config.columns[cellIndex].width, config.columns[cellIndex].wrapWord);\n        rowHeight = Math.max(rowHeight, cellHeight);\n        return;\n      }\n      const {\n        topLeft,\n        bottomRight,\n        height\n      } = containingRange;\n      // bottom-most cell of a range needs to contain all remain lines of spanning cells\n      if (rowIndex === bottomRight.row) {\n        const totalOccupiedSpanningCellHeight = (0, utils_1.sumArray)(rowHeights.slice(topLeft.row));\n        const totalHorizontalBorderHeight = bottomRight.row - topLeft.row;\n        const totalHiddenHorizontalBorderHeight = (0, utils_1.sequence)(topLeft.row + 1, bottomRight.row).filter(horizontalBorderIndex => {\n          var _a;\n          /* istanbul ignore next */\n          return !((_a = config.drawHorizontalLine) === null || _a === void 0 ? void 0 : _a.call(config, horizontalBorderIndex, rows.length));\n        }).length;\n        const cellHeight = height - totalOccupiedSpanningCellHeight - totalHorizontalBorderHeight + totalHiddenHorizontalBorderHeight;\n        rowHeight = Math.max(rowHeight, cellHeight);\n      }\n      // otherwise, just depend on other sibling cell heights in the row\n    });\n    rowHeights.push(rowHeight);\n  }\n  return rowHeights;\n};\nexports.calculateRowHeights = calculateRowHeights;","map":{"version":3,"names":["calculateCellHeight_1","require","utils_1","calculateRowHeights","rows","config","rowHeights","rowIndex","row","entries","rowHeight","forEach","cell","cellIndex","containingRange","_a","spanningCellManager","getContainingRange","col","cellHeight","calculateCellHeight","columns","width","wrapWord","Math","max","topLeft","bottomRight","height","totalOccupiedSpanningCellHeight","sumArray","slice","totalHorizontalBorderHeight","totalHiddenHorizontalBorderHeight","sequence","filter","horizontalBorderIndex","drawHorizontalLine","call","length","push","exports"],"sources":["../../src/calculateRowHeights.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,MAAAA,qBAAA,GAAAC,OAAA;AAOA,MAAAC,OAAA,GAAAD,OAAA;AAKA;;;AAGO,MAAME,mBAAmB,GAAGA,CAACC,IAAW,EAAEC,MAAkB,KAAc;EAC/E,MAAMC,UAAU,GAAa,EAAE;EAE/B,KAAK,MAAM,CAACC,QAAQ,EAAEC,GAAG,CAAC,IAAIJ,IAAI,CAACK,OAAO,EAAE,EAAE;IAC5C,IAAIC,SAAS,GAAG,CAAC;IAEjBF,GAAG,CAACG,OAAO,CAAC,CAACC,IAAI,EAAEC,SAAS,KAAI;;MAC9B,MAAMC,eAAe,GAAG,CAAAC,EAAA,GAAAV,MAAM,CAACW,mBAAmB,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,kBAAkB,CAAC;QAACC,GAAG,EAAEL,SAAS;QACpFL,GAAG,EAAED;MAAQ,CAAC,CAAC;MAEjB,IAAI,CAACO,eAAe,EAAE;QACpB,MAAMK,UAAU,GAAG,IAAAnB,qBAAA,CAAAoB,mBAAmB,EAACR,IAAI,EAAEP,MAAM,CAACgB,OAAO,CAACR,SAAS,CAAC,CAACS,KAAK,EAAEjB,MAAM,CAACgB,OAAO,CAACR,SAAS,CAAC,CAACU,QAAQ,CAAC;QACjHb,SAAS,GAAGc,IAAI,CAACC,GAAG,CAACf,SAAS,EAAES,UAAU,CAAC;QAE3C;;MAEF,MAAM;QAACO,OAAO;QAAEC,WAAW;QAAEC;MAAM,CAAC,GAAGd,eAAe;MAEtD;MACA,IAAIP,QAAQ,KAAKoB,WAAW,CAACnB,GAAG,EAAE;QAChC,MAAMqB,+BAA+B,GAAG,IAAA3B,OAAA,CAAA4B,QAAQ,EAACxB,UAAU,CAACyB,KAAK,CAACL,OAAO,CAAClB,GAAG,CAAC,CAAC;QAC/E,MAAMwB,2BAA2B,GAAGL,WAAW,CAACnB,GAAG,GAAGkB,OAAO,CAAClB,GAAG;QACjE,MAAMyB,iCAAiC,GAAG,IAAA/B,OAAA,CAAAgC,QAAQ,EAACR,OAAO,CAAClB,GAAG,GAAG,CAAC,EAAEmB,WAAW,CAACnB,GAAG,CAAC,CAAC2B,MAAM,CAAEC,qBAAqB,IAAI;;UACpH;UACA,OAAO,EAAC,CAAArB,EAAA,GAAAV,MAAM,CAACgC,kBAAkB,cAAAtB,EAAA,uBAAAA,EAAA,CAAAuB,IAAA,CAAzBjC,MAAM,EAAsB+B,qBAAqB,EAAEhC,IAAI,CAACmC,MAAM,CAAC;QACzE,CAAC,CAAC,CAACA,MAAM;QAET,MAAMpB,UAAU,GAAGS,MAAM,GAAGC,+BAA+B,GAAGG,2BAA2B,GAAGC,iCAAiC;QAC7HvB,SAAS,GAAGc,IAAI,CAACC,GAAG,CAACf,SAAS,EAAES,UAAU,CAAC;;MAG7C;IACF,CAAC,CAAC;IAEFb,UAAU,CAACkC,IAAI,CAAC9B,SAAS,CAAC;;EAG5B,OAAOJ,UAAU;AACnB,CAAC;AAtCYmC,OAAA,CAAAtC,mBAAmB,GAAAA,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}